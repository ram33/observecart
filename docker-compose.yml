version: '3.8'
services:
  frontend:
    build: ./observecart-frontend
    ports:
      - '3000:3000'
    environment:
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
      - JWT_SECRET=your_jwt_secret_here
    networks:
      - internal

  product-service:
    build: ./observecart-backend/product-service
    ports:
      - '3001:3001'
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/observecart
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URI=redis://redis:6379
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    depends_on:
      - mongodb
    networks:
      - internal

  cart-service:
    build: ./observecart-backend/cart-service
    ports:
      - '3002:3002'
    environment:
      - PORT=3002
      - MONGODB_URI=mongodb://mongodb:27017/observecart
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URI=redis://redis:6379
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    depends_on:
      - redis
    networks:
      - internal

  inventory-service:
    build: ./observecart-backend/inventory-service
    ports:
      - '3005:3005'
    environment:
      - PORT=3005
      - MONGODB_URI=mongodb://mongodb:27017/observecart
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URI=redis://redis:6379
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    depends_on:
      - redis
    networks:
      - internal

  location-service:
    build: ./observecart-backend/location-service
    ports:
      - '3006:3006'
    environment:
      - PORT=3006
      - MONGODB_URI=mongodb://mongodb:27017/observecart
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URI=redis://redis:6379
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    depends_on:
      - redis
    networks:
      - internal

  order-service:
    build: ./observecart-backend/order-service
    ports:
      - '3003:3003'
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - PORT=3003
      - MONGODB_URI=mongodb://mongodb:27017/observecart
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URI=redis://redis:6379
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    depends_on:
      - kafka
    networks:
      - internal

  user-service:
    build: ./observecart-backend/user-service
    ports:
      - '3004:3004'
    environment:
      - PORT=3004
      - MONGODB_URI=mongodb://mongodb:27017/observecart
      - KAFKA_BROKERS=kafka:9092
      - REDIS_URI=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    depends_on:
      - mongodb
    networks:
      - internal

  order-processor:
    build: ./observecart-backend/order-processor
    environment:
      - KAFKA_BROKER=kafka:9092
      - INVENTORY_SERVICE_URL=http://inventory-service:3005
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    depends_on:
      - kafka
    networks:
      - internal

  ingest-processor:
    build: ./observecart-backend/ingest-processor
    environment:
      - FRONTEND_URL=http://frontend:3000
      - TEST_USERNAME=${TEST_USER_ID}
      - TEST_PASSWORD=${TEST_USER_PASSWORD}
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    depends_on:
      - frontend
    networks:
      - internal

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - ./mongodb_data:/data/db
    networks:
      - internal

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    networks:
      - internal

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - internal

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - internal

  agent:
    container_name: newrelic-infra
    build: ./newrelic-infra
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - '/:/host:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
    restart: unless-stopped

volumes:
  redis_data:

networks:
  internal:
    driver: bridge
